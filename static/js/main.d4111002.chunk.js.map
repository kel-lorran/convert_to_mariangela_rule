{"version":3,"sources":["model/Line.js","model/Doc.js","App.js","index.js"],"names":["Line","type","content","this","textContent","attributesToCreateCheckConstrainsNotNull","tableName","removeNotNullText","text","replace","match","reduce","acc","line","i","resultMatch","push","map","att","Doc","rawText","lineList","l","toLowerCase","createTableLines","constrainNotNullLines","filter","forEach","lTarget","getWithoutNotNullText","generateCheckConstrainsNotNull","join","App","useState","contentToConvert","setContentToConvert","contentConverted","setContentConverted","className","onSubmit","e","preventDefault","doc","convert","onChange","value","target","placeholder","required","ReactDOM","render","document","getElementById"],"mappings":"yPAAqBA,E,WACjB,WAAYC,EAAMC,GAAU,oBACxBC,KAAKF,KAAOA,EACZE,KAAKC,YAAcF,EACnBC,KAAKE,yCAA2C,GAChDF,KAAKG,UAAY,G,yDAErB,WAAyB,IAAD,OACpB,GAAiB,iBAAdH,KAAKF,KAAyB,CAC7B,IAAMM,EAAoB,SAAAC,GAAI,OAAIA,EAAKC,QAAQ,aAAc,KAE7DN,KAAKC,YAAcD,KAAKC,YAAYM,MAAM,YACrCC,QAAO,SAACC,EAAKC,EAAMC,GAChB,OAAQA,GACJ,KAAK,EAED,OADA,EAAKR,UAAYO,EAAKH,MAAM,mBAAmB,GACxCG,EAEX,KAAK,EACD,OAAOD,EAAOL,EAAkBM,GAEpC,QACI,IAAME,EAAcF,EAAKH,MAAM,OAG/B,OAFGK,GACC,EAAKV,yCAAyCW,KAAKD,EAAY,IAC5DH,EAAOL,EAAkBM,MAEzC,IAEX,OAAOV,O,4CAEX,WAAkC,IAAD,OAC7B,OAAOA,KAAKE,yCACPY,KAAI,SAACC,EAAKJ,GAAN,OAAY,IAAId,EACjB,cADa,sBAEE,EAAKM,UAFP,4CAGGY,EAAIT,QAAQ,MAAO,IAHtB,eAGgCK,EAAI,EAHpC,oBAGiDI,EAHjD,yC,KC/BRC,E,WACjB,WAAYC,GAAU,oBAClBjB,KAAKkB,SAAWD,EAAQV,MAAM,wBACzBO,KAAI,SAAAK,GAAC,OAAI,IAAItB,EACVsB,EAAEZ,MAAM,YAAY,GAAGa,cACvBD,M,2CAIZ,WACI,IAAME,EAAmB,GACnBC,EAAwB,GAO9B,OANAtB,KAAKkB,SAASK,QAAO,SAAAJ,GAAC,MAAe,iBAAXA,EAAErB,QACvB0B,SAAQ,SAAAC,GACLJ,EAAiBR,KAAKY,EAAQC,yBAC9BJ,EAAsBT,KAAtB,MAAAS,EAAqB,YAASG,EAAQE,sCAGvC,UAAIN,EAAJ,YAAyBrB,KAAKkB,SAASK,QAAO,SAAAJ,GAAC,MAAe,iBAAXA,EAAErB,SAA6BwB,GACpFR,KAAI,qBAAEb,eACN2B,KAAK,U,oBCYHC,MA7Bf,WAAgB,IAAD,EACmCC,mBAAS,IAD5C,mBACNC,EADM,KACYC,EADZ,OAEmCF,mBAAS,IAF5C,mBAENG,EAFM,KAEYC,EAFZ,KAYb,OACE,sBAAKC,UAAU,MAAf,UACE,0IACA,uBAAMC,SATW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAM,IAAIvB,EAAIe,GACpBG,EAAoBK,EAAIC,YAMQC,SAXb,SAAC,GAAD,IAAYC,EAAZ,EAAGC,OAASD,MAAZ,OAAwBV,EAAoBU,IAW7D,UACE,0BAAUE,YAAY,uBAAuBC,UAAQ,IAErD,wBAAQ/C,KAAK,SAAb,uBAEE,8BACGmC,WCrBba,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d4111002.chunk.js","sourcesContent":["export default class Line {\r\n    constructor(type, content) {\r\n        this.type = type;\r\n        this.textContent = content;\r\n        this.attributesToCreateCheckConstrainsNotNull = [];\r\n        this.tableName = '';\r\n    }\r\n    getWithoutNotNullText() {\r\n        if(this.type === 'create table') {\r\n            const removeNotNullText = text => text.replace(/not null/gi, '');\r\n            // remover NOT NULL da linha do id\r\n            this.textContent = this.textContent.match(/.+\\n|.+/g)\r\n                .reduce((acc, line, i) => {\r\n                    switch (i) {\r\n                        case 0:\r\n                            this.tableName = line.match(/(?<=TABLE\\s)\\w+/)[0]\r\n                            return line;\r\n\r\n                        case 1:\r\n                            return acc += removeNotNullText(line);\r\n                    \r\n                        default:\r\n                            const resultMatch = line.match(/\\w+/)\r\n                            if(resultMatch)\r\n                                this.attributesToCreateCheckConstrainsNotNull.push(resultMatch[0]);\r\n                            return acc += removeNotNullText(line);\r\n                    }\r\n                }, '');\r\n        }\r\n        return this;\r\n    }\r\n    generateCheckConstrainsNotNull() {\r\n        return this.attributesToCreateCheckConstrainsNotNull\r\n            .map((att, i) => new Line(\r\n                'alter table',\r\n                `ALTER TABLE ${this.tableName} \r\n            ADD CONSTRAINT ck_${att.replace(/_.+/, '')}_nn_${i + 1} CHECK ( ${att} IS NOT NULL );\r\n            `\r\n            )\r\n            );\r\n    }\r\n}","import Line from './Line';\r\n\r\nexport default class Doc {\r\n    constructor(rawText) {\r\n        this.lineList = rawText.match(/^.+TABLE[\\w|\\W]+?;/gm)\r\n            .map(l => new Line(\r\n                l.match(/^.+TABLE/)[0].toLowerCase(),\r\n                l\r\n            ));\r\n    }\r\n\r\n    convert() {\r\n        const createTableLines = [];\r\n        const constrainNotNullLines = [];\r\n        this.lineList.filter(l => l.type === 'create table')\r\n            .forEach(lTarget => {\r\n                createTableLines.push(lTarget.getWithoutNotNullText());\r\n                constrainNotNullLines.push(...lTarget.generateCheckConstrainsNotNull())\r\n            })\r\n\r\n        return [...createTableLines, ...this.lineList.filter(l => l.type !== 'create table'), ...constrainNotNullLines]\r\n            .map(({textContent}) => textContent)\r\n            .join('\\n')\r\n    }\r\n}","import React, { useState } from 'react';\nimport Doc from './model/Doc';\nimport Line from './model/Line';\nimport './App.css';\n\nfunction App() {\n  const [contentToConvert, setContentToConvert] = useState('');\n  const [contentConverted, setContentConverted] = useState('');\n\n  const handleChange = ({ target: {value}}) => setContentToConvert(value);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const doc = new Doc(contentToConvert)\n    setContentConverted(doc.convert())\n  } \n\n  return (\n    <div className=\"App\">\n      <h1>Convertar seus arquivos .ddl gerados automaticamente pelo Oracle Data Modeler para o pad√£o Mariangela</h1>\n      <form onSubmit={handleSubmit} onChange={handleChange}>\n        <textarea placeholder=\"cole seu codigo aqui\" required>\n        </textarea>\n        <button type=\"submit\">Converter</button>\n        {/* <textarea> */}\n          <pre>\n            {contentConverted}\n          </pre>\n        {/* </textarea> */}\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}